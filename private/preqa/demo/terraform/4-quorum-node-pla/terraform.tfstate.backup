{
  "version": 4,
  "terraform_version": "1.5.7",
  "serial": 18,
  "lineage": "a9000ade-d584-95d5-03d4-fc70702dbf4b",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "393541031529",
            "arn": "arn:aws:sts::393541031529:assumed-role/DevOps/GitHubActions",
            "id": "393541031529",
            "user_id": "AROAVXIG7SZU6R6VAJPUA:GitHubActions"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eip",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "association_id": "",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "filter": [
              {
                "name": "tag:Name",
                "values": [
                  "preqa-demo-quorum-node-qn-0-eip"
                ]
              }
            ],
            "id": "eipalloc-0bfb9dd66e7ea5648",
            "instance_id": "",
            "network_interface_id": "",
            "network_interface_owner_id": "",
            "private_dns": null,
            "private_ip": "",
            "public_dns": "ec2-52-213-155-18.eu-west-1.compute.amazonaws.com",
            "public_ip": "52.213.155.18",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Cluster": "demo",
              "Name": "preqa-demo-quorum-node-qn-0-eip",
              "Network": "preqa"
            },
            "timeouts": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "CONFIG_MAP"
              }
            ],
            "arn": "arn:aws:eks:eu-west-1:393541031529:cluster/preqa-demo",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJT25zV0dZZHhVamN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBeU1EVXhNVE0xTURKYUZ3MHpOREF5TURJeE1UUXdNREphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUN2YkltQkh5MWwvbjF2NVhvVHRsc1l1Z0t0ZGplOVlHeTlLOFlOdW5pZ0owcENMMDJUUlpEVll5TWsKR0dFRDAvY2IzYmhydndnV29qN0NvTGdoQkU4Sm1aMWUzc0xmNzdSL09pSzhmdDNnU1FEbHVMS055Yk90aXp4UApyZTJvZnFhT1dLZUNFcXhsUTFLVXdZbGMrdmYzMkpiSVFON2tqbmdpdmVvQW05SkVnZUZBcDJzclFzaXBNcEJMCmFkOWV4cFQwYWs2ODZKMlVkS2JSNmFnZTRjQ2htVkh1WVpsVXZFVE1FVy92RFY5WnJNNUxpcG4vYmhOTzVCMnMKWmtHcFNjYlpvczBEeEY5c042bURJMWVDaWxoY01xS0tVMHZCVnhNZVdESjQ3RE5sK0Z2VjhTQXVFNW4rc2xSbwpqUlpuMHN0MmRDd054OFZNMHdHZjBYaWc5blFIQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUZTY3TjNHUUlhNm5NSWYvN2c0dkhGd0FsWFhqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTNXaGxWeGtPaAozTGdxeWZuR2NwOGJzUHhmcENPTk5YV2xDMVZvVUIzUENzMG05bTBrSU1KZDR4d3Vza21VNTJQSDdjc0RyTnF0CmJhVTMzUy81dzVwQThhU2lvQWlOOUNQWDBlUGh1b0NYbXJOVmxKWTQwaWNmQ2YyYVVPMEM5eGp2VUpnMkcxWmMKbTh0ME91WU1RY3Vpb21Td05TNk5hb2F6cFFtTUVQMkhZTHlPcDA2RENtMFpVRG54Rk1RUFc1NW1UT2RKK04vdwo2eWdKbkpNb09LeEtJc2N3dFp5RHkvK3lyaVV6dXBGYkRUN3ZvbEhiWkNBa0loT24wYkxFcGhtNEFFbmdpSzRHCjFESnI2cmduWS9RaGdDYlFGdHMzODBPVzJ3NVB6YnZYZ2MrNjFUdmlvUWoycEF4emw0UURHZzlpQnNwL2lRYmQKdG5sTEtKSXBQSXZRCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "created_at": "2024-02-05 11:35:42.685 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator",
              "controllerManager",
              "scheduler"
            ],
            "endpoint": "https://CDBDC986C6F7A18E3B72109D63C01483.gr7.eu-west-1.eks.amazonaws.com",
            "id": "preqa-demo",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.eu-west-1.amazonaws.com/id/CDBDC986C6F7A18E3B72109D63C01483"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "preqa-demo",
            "outpost_config": [],
            "platform_version": "eks.7",
            "role_arn": "arn:aws:iam::393541031529:role/preqa-demo-cluster-20240205113333228000000001",
            "status": "ACTIVE",
            "tags": {
              "Cluster": "demo",
              "Name": "preqa-demo",
              "Network": "preqa"
            },
            "version": "1.28",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0762c5d316da64e87",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-08a07cbc790fffa34"
                ],
                "subnet_ids": [
                  "subnet-058d39420a0c57373",
                  "subnet-080e36423851b65cf",
                  "subnet-0d387bdad17434632"
                ],
                "vpc_id": "vpc-0161f3a6eb96f4939"
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_region",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "Europe (Ireland)",
            "endpoint": "ec2.eu-west-1.amazonaws.com",
            "id": "eu-west-1",
            "name": "eu-west-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubernetes_config_map",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "enode": "8f938c81eac18693f40b9324119002faf6e228169e0d26b447940055c899f6d166d07e7f237080751112ad2cc76cc51d30d9d7d710129a35a00ec7b4ff2f0332\n",
              "genesis-geth.json": "{\n  \"alloc\": {\n    \"0xcd7b0409b89523d98a98dbebe89d6e6d60f92274\": {\n        \"balance\": \"1000000000000000000000000000\"\n    }\n  },\n  \"coinbase\": \"0x0000000000000000000000000000000000000000\",\n  \"config\": {\n    \"homesteadBlock\": 0,\n    \"byzantiumBlock\": 0,\n    \"constantinopleBlock\": 0,\n    \"petersburgBlock\": 0,\n    \"istanbulBlock\": 0,\n    \"eip150Block\": 0,\n    \"eip150Hash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n    \"eip155Block\": 0,\n    \"eip158Block\": 0,\n    \"maxCodeSizeConfig\": [\n      {\n        \"block\": 0,\n        \"size\": 32\n      }\n    ],\n    \"chainId\": 10,\n    \"isQuorum\": true,\n    \"istanbul\": {\n      \"epoch\": 30000,\n      \"policy\": 0\n    }\n  },\n  \"difficulty\": \"0x1\",\n  \"extraData\": \"0x0000000000000000000000000000000000000000000000000000000000000000d8d594321be8365fa006a801793d5cc95d54f9f5da549780c0\",\n  \"gasLimit\": \"0xE0000000\",\n  \"mixHash\": \"0x63746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365\",\n  \"nonce\": \"0x0\",\n  \"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n  \"timestamp\": \"0x00\"\n}",
              "istanbul-validator-config.toml": "vanity = \"0x00\"\nvalidators = [\n  \"0x321Be8365FA006A801793d5cc95d54f9f5da5497\"\n]",
              "nodekey.pub": "0x321Be8365FA006A801793d5cc95d54f9f5da5497\n",
              "permissioned-nodes.json": "[\n  \"enode://8f938c81eac18693f40b9324119002faf6e228169e0d26b447940055c899f6d166d07e7f237080751112ad2cc76cc51d30d9d7d710129a35a00ec7b4ff2f0332@quorum-p2p:30303?discport=0\"\n]\n"
            },
            "id": "default/quorum-settings",
            "immutable": false,
            "metadata": [
              {
                "annotations": {
                  "meta.helm.sh/release-name": "qn-0",
                  "meta.helm.sh/release-namespace": "default"
                },
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/managed-by": "Helm",
                  "name": "quorum-settings"
                },
                "name": "quorum-settings",
                "namespace": "default",
                "resource_version": "61561",
                "uid": "a780e5f8-3518-43ba-a403-4d86f2516104"
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubernetes_service",
      "name": "quorum_rpc",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "default/quorum-rpc",
            "metadata": [
              {
                "annotations": {
                  "meta.helm.sh/release-name": "qn-0",
                  "meta.helm.sh/release-namespace": "default"
                },
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/instance": "qn-0",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "quorum",
                  "app.kubernetes.io/version": "23.4.0",
                  "helm.sh/chart": "quorum-node-0.6.7"
                },
                "name": "quorum-rpc",
                "namespace": "default",
                "resource_version": "61572",
                "uid": "a931888a-8882-482f-be34-526199a2a4b3"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.182.195",
                "cluster_ips": [
                  "172.20.182.195"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "rpc-listener",
                    "node_port": 0,
                    "port": 8545,
                    "protocol": "TCP",
                    "target_port": "8545"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app.kubernetes.io/instance": "qn-0",
                  "app.kubernetes.io/name": "quorum"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "config_context_sh",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "COMPANY_NAME=demo\nNETWORK_NAME=preqa\nTMP_FOLDER_PATH=../../../../private/preqa/demo/tmp\nNETWORK_CONFIG_PATH=../../../../private/preqa/demo\nprivateFolder=../../../../private/preqa/demo/private\nadvancedFolder=../../../../private/preqa/demo/private/advanced\nqnPath=../../../../private/preqa/demo/private/advanced/quorum-node\nethPath=../../../../private/preqa/demo/private/advanced/ethadapter\nepiPath=../../../../private/preqa/demo/private/advanced/epi\nqnValuesPath=../../../../private/preqa/demo/private/advanced/quorum-node/my-values.yaml\nghInfoPath=../../../../private/preqa/demo/private/github.info.yaml\nnewNetworkService=../../../../private/preqa/demo/private/advanced/quorum-node/new-network-service.yaml\njoinNetworkInfo=../../../../private/preqa/demo/private/advanced/quorum-node/join-network.info.yaml\njoinPath=../../../../networks/preqa/editable/demo/join\nqnInfoPath=../../../../private/preqa/demo/private/qn-0.info.yaml\nethInfoPath=../../../../private/preqa/demo/private/ethadapter.info.yaml\nepiInfoPath=../../../../private/preqa/demo/private/epi.info.yaml\nepiServicePath=../../../../private/preqa/demo/private/advanced/epi/epi-service.yaml\nsmartContractInfoPath=../../../../private/preqa/demo/private/advanced/smartContract.info.yaml\nethValuesPath=../../../../private/preqa/demo/private/advanced/ethadapter/my-values.yaml\nethServicePath=../../../../private/preqa/demo/private/advanced/ethadapter/ethadapter-service.yaml\nupdatePartnersInfo=../../../../private/preqa/demo/private/update-partners.info.yaml\n\ngenesisGethPath=../../../../networks/preqa/genesis-geth.json\nenodePath=../../../../networks/preqa/editable/demo/enode\nvalidatorPath=../../../../networks/preqa/editable/demo/validator\n",
            "content_base64": "Q09NUEFOWV9OQU1FPWRlbW8KTkVUV09SS19OQU1FPXByZXFhClRNUF9GT0xERVJfUEFUSD0uLi8uLi8uLi8uLi9wcml2YXRlL3ByZXFhL2RlbW8vdG1wCk5FVFdPUktfQ09ORklHX1BBVEg9Li4vLi4vLi4vLi4vcHJpdmF0ZS9wcmVxYS9kZW1vCnByaXZhdGVGb2xkZXI9Li4vLi4vLi4vLi4vcHJpdmF0ZS9wcmVxYS9kZW1vL3ByaXZhdGUKYWR2YW5jZWRGb2xkZXI9Li4vLi4vLi4vLi4vcHJpdmF0ZS9wcmVxYS9kZW1vL3ByaXZhdGUvYWR2YW5jZWQKcW5QYXRoPS4uLy4uLy4uLy4uL3ByaXZhdGUvcHJlcWEvZGVtby9wcml2YXRlL2FkdmFuY2VkL3F1b3J1bS1ub2RlCmV0aFBhdGg9Li4vLi4vLi4vLi4vcHJpdmF0ZS9wcmVxYS9kZW1vL3ByaXZhdGUvYWR2YW5jZWQvZXRoYWRhcHRlcgplcGlQYXRoPS4uLy4uLy4uLy4uL3ByaXZhdGUvcHJlcWEvZGVtby9wcml2YXRlL2FkdmFuY2VkL2VwaQpxblZhbHVlc1BhdGg9Li4vLi4vLi4vLi4vcHJpdmF0ZS9wcmVxYS9kZW1vL3ByaXZhdGUvYWR2YW5jZWQvcXVvcnVtLW5vZGUvbXktdmFsdWVzLnlhbWwKZ2hJbmZvUGF0aD0uLi8uLi8uLi8uLi9wcml2YXRlL3ByZXFhL2RlbW8vcHJpdmF0ZS9naXRodWIuaW5mby55YW1sCm5ld05ldHdvcmtTZXJ2aWNlPS4uLy4uLy4uLy4uL3ByaXZhdGUvcHJlcWEvZGVtby9wcml2YXRlL2FkdmFuY2VkL3F1b3J1bS1ub2RlL25ldy1uZXR3b3JrLXNlcnZpY2UueWFtbApqb2luTmV0d29ya0luZm89Li4vLi4vLi4vLi4vcHJpdmF0ZS9wcmVxYS9kZW1vL3ByaXZhdGUvYWR2YW5jZWQvcXVvcnVtLW5vZGUvam9pbi1uZXR3b3JrLmluZm8ueWFtbApqb2luUGF0aD0uLi8uLi8uLi8uLi9uZXR3b3Jrcy9wcmVxYS9lZGl0YWJsZS9kZW1vL2pvaW4KcW5JbmZvUGF0aD0uLi8uLi8uLi8uLi9wcml2YXRlL3ByZXFhL2RlbW8vcHJpdmF0ZS9xbi0wLmluZm8ueWFtbApldGhJbmZvUGF0aD0uLi8uLi8uLi8uLi9wcml2YXRlL3ByZXFhL2RlbW8vcHJpdmF0ZS9ldGhhZGFwdGVyLmluZm8ueWFtbAplcGlJbmZvUGF0aD0uLi8uLi8uLi8uLi9wcml2YXRlL3ByZXFhL2RlbW8vcHJpdmF0ZS9lcGkuaW5mby55YW1sCmVwaVNlcnZpY2VQYXRoPS4uLy4uLy4uLy4uL3ByaXZhdGUvcHJlcWEvZGVtby9wcml2YXRlL2FkdmFuY2VkL2VwaS9lcGktc2VydmljZS55YW1sCnNtYXJ0Q29udHJhY3RJbmZvUGF0aD0uLi8uLi8uLi8uLi9wcml2YXRlL3ByZXFhL2RlbW8vcHJpdmF0ZS9hZHZhbmNlZC9zbWFydENvbnRyYWN0LmluZm8ueWFtbApldGhWYWx1ZXNQYXRoPS4uLy4uLy4uLy4uL3ByaXZhdGUvcHJlcWEvZGVtby9wcml2YXRlL2FkdmFuY2VkL2V0aGFkYXB0ZXIvbXktdmFsdWVzLnlhbWwKZXRoU2VydmljZVBhdGg9Li4vLi4vLi4vLi4vcHJpdmF0ZS9wcmVxYS9kZW1vL3ByaXZhdGUvYWR2YW5jZWQvZXRoYWRhcHRlci9ldGhhZGFwdGVyLXNlcnZpY2UueWFtbAp1cGRhdGVQYXJ0bmVyc0luZm89Li4vLi4vLi4vLi4vcHJpdmF0ZS9wcmVxYS9kZW1vL3ByaXZhdGUvdXBkYXRlLXBhcnRuZXJzLmluZm8ueWFtbAoKZ2VuZXNpc0dldGhQYXRoPS4uLy4uLy4uLy4uL25ldHdvcmtzL3ByZXFhL2dlbmVzaXMtZ2V0aC5qc29uCmVub2RlUGF0aD0uLi8uLi8uLi8uLi9uZXR3b3Jrcy9wcmVxYS9lZGl0YWJsZS9kZW1vL2Vub2RlCnZhbGlkYXRvclBhdGg9Li4vLi4vLi4vLi4vbmV0d29ya3MvcHJlcWEvZWRpdGFibGUvZGVtby92YWxpZGF0b3IK",
            "content_base64sha256": "DnEn6r7pLKoNP0h6inxK76JcqzUcifmg3/BDNn0shbE=",
            "content_base64sha512": "LcxdRucTORNl1gcIDFc59iPihGeQHCY3tukHczpwd4wcivCMF9gY4npEzLk/pt4Xj8HUmWOtY8yFvzwvsAFAUA==",
            "content_md5": "a06d67e597605e16d30f075afc35dce9",
            "content_sha1": "933bc649aa8c05122c9667b5465ba22a5fabdb5f",
            "content_sha256": "0e7127eabee92caa0d3f487a8a7c4aefa25cab351c89f9a0dff043367d2c85b1",
            "content_sha512": "2dcc5d46e713391365d607080c5739f623e28467901c2637b6e907733a70778c1c8af08c17d818e27a44ccb93fa6de178fc1d49963ad63cc85bf3c2fb0014050",
            "filename": "../../../../private/preqa/demo/config-context.sh",
            "id": "933bc649aa8c05122c9667b5465ba22a5fabdb5f"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "join_network_plugin_secrets_json",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "{\"nodeKey\":\"5e0c77dfaabccca9d665fa4dd53304467b8b42353af9a7119a1348dd8455d651\"}",
            "content_base64": "eyJub2RlS2V5IjoiNWUwYzc3ZGZhYWJjY2NhOWQ2NjVmYTRkZDUzMzA0NDY3YjhiNDIzNTNhZjlhNzExOWExMzQ4ZGQ4NDU1ZDY1MSJ9",
            "content_base64sha256": "RV5SS7HGerDwboJlGwO4jZVLIRksNnOGezpNNIWX/bo=",
            "content_base64sha512": "+IMAKmTmi3Tw//79tlEMSJlXLevO5bkToVUrkUjLgBXMbn3Qu1SAWO9kuryoUYUjscVAqVPccvsDff1XgtrHjg==",
            "content_md5": "8e18cf680b2d4151f3841bc4d43959dc",
            "content_sha1": "597eafbd26a87f6a834bb87c0545130d38f6170d",
            "content_sha256": "455e524bb1c67ab0f06e82651b03b88d954b21192c3673867b3a4d348597fdba",
            "content_sha512": "f883002a64e68b74f0fffefdb6510c4899572debcee5b913a1552b9148cb8015cc6e7dd0bb548058ef64babca8518523b1c540a953dc72fb037dfd5782dac78e",
            "filename": "../../../../private/preqa/demo/tmp/join-network.plugin.secrets.json",
            "id": "597eafbd26a87f6a834bb87c0545130d38f6170d"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "new_network_plugin_secrets_json",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "{\"nodeKey\":\"64ab607c10e4959e04fea5eda9e23dea4b535ef53165657be12dc3baf04b877d\",\"genesisKeyStoreAccount\":\"eyJhZGRyZXNzIjoiY2Q3YjA0MDliODk1MjNkOThhOThkYmViZTg5ZDZlNmQ2MGY5MjI3NCIsImNyeXB0byI6eyJjaXBoZXIiOiJhZXMtMTI4LWN0ciIsImNpcGhlcnRleHQiOiI3NTk1MzkwNjExOThkOWY5MmU5NjFiMWZlMDgxMWRkMzU2MmUzZDU3MjE4NjI3NjgxNjIzY2JiODdiODU4NjJkIiwiY2lwaGVycGFyYW1zIjp7Iml2IjoiNzVjMGE1ZGYwYzNlNmE0NGY4NDc5YzM5Yzc2MWVmZTMifSwibWFjIjoiYzAyMDZjMzAzNTRjZjZjM2QyNzBjMWQ1ZWVmZjQ5ZGI4Mzc1M2VlMGYwMjdiZTYzNGQwMWZhNGQ2YmUyZTJmMSIsImtkZiI6InNjcnlwdCIsImtkZnBhcmFtcyI6eyJka2xlbiI6MzIsIm4iOjI2MjE0NCwiciI6OCwicCI6MSwic2FsdCI6IjM5Zjg4NzAxMGZiOGI5NDJlNzhmMTMyN2FlNDA1NmI5NThiMWQzODViN2NhZTkyNWQxMzBmNWY4MDYzNjQwMzcifX0sImlkIjoiYzFiOTI4OWQtODU3MS00MTcwLWJhYTktZTEyODBiZDBmZGI1IiwidmVyc2lvbiI6M30=\",\"genesisKeyStoreAccountEncryptionPassword\":\"3TS0mvOG8lBLTv0VhmY8\",\"genesisAccountPrivateKey\":{\"type\":\"Buffer\",\"data\":[142,100,110,143,253,111,229,188,106,119,204,49,118,95,208,78,122,21,61,192,218,136,91,255,123,253,169,214,135,59,200,155]}}",
            "content_base64": "eyJub2RlS2V5IjoiNjRhYjYwN2MxMGU0OTU5ZTA0ZmVhNWVkYTllMjNkZWE0YjUzNWVmNTMxNjU2NTdiZTEyZGMzYmFmMDRiODc3ZCIsImdlbmVzaXNLZXlTdG9yZUFjY291bnQiOiJleUpoWkdSeVpYTnpJam9pWTJRM1lqQTBNRGxpT0RrMU1qTmtPVGhoT1Roa1ltVmlaVGc1WkRabE5tUTJNR1k1TWpJM05DSXNJbU55ZVhCMGJ5STZleUpqYVhCb1pYSWlPaUpoWlhNdE1USTRMV04wY2lJc0ltTnBjR2hsY25SbGVIUWlPaUkzTlRrMU16a3dOakV4T1Roa09XWTVNbVU1TmpGaU1XWmxNRGd4TVdSa016VTJNbVV6WkRVM01qRTROakkzTmpneE5qSXpZMkppT0RkaU9EVTROakprSWl3aVkybHdhR1Z5Y0dGeVlXMXpJanA3SW1sMklqb2lOelZqTUdFMVpHWXdZek5sTm1FME5HWTRORGM1WXpNNVl6YzJNV1ZtWlRNaWZTd2liV0ZqSWpvaVl6QXlNRFpqTXpBek5UUmpaalpqTTJReU56QmpNV1ExWldWbVpqUTVaR0k0TXpjMU0yVmxNR1l3TWpkaVpUWXpOR1F3TVdaaE5HUTJZbVV5WlRKbU1TSXNJbXRrWmlJNkluTmpjbmx3ZENJc0ltdGtabkJoY21GdGN5STZleUprYTJ4bGJpSTZNeklzSW00aU9qSTJNakUwTkN3aWNpSTZPQ3dpY0NJNk1Td2ljMkZzZENJNklqTTVaamc0TnpBeE1HWmlPR0k1TkRKbE56aG1NVE15TjJGbE5EQTFObUk1TlRoaU1XUXpPRFZpTjJOaFpUa3lOV1F4TXpCbU5XWTRNRFl6TmpRd016Y2lmWDBzSW1sa0lqb2lZekZpT1RJNE9XUXRPRFUzTVMwME1UY3dMV0poWVRrdFpURXlPREJpWkRCbVpHSTFJaXdpZG1WeWMybHZiaUk2TTMwPSIsImdlbmVzaXNLZXlTdG9yZUFjY291bnRFbmNyeXB0aW9uUGFzc3dvcmQiOiIzVFMwbXZPRzhsQkxUdjBWaG1ZOCIsImdlbmVzaXNBY2NvdW50UHJpdmF0ZUtleSI6eyJ0eXBlIjoiQnVmZmVyIiwiZGF0YSI6WzE0MiwxMDAsMTEwLDE0MywyNTMsMTExLDIyOSwxODgsMTA2LDExOSwyMDQsNDksMTE4LDk1LDIwOCw3OCwxMjIsMjEsNjEsMTkyLDIxOCwxMzYsOTEsMjU1LDEyMywyNTMsMTY5LDIxNCwxMzUsNTksMjAwLDE1NV19fQ==",
            "content_base64sha256": "t39RRlWbSCk+STp06Qi5Y56FqDyN+zGrVU+n5js4UXU=",
            "content_base64sha512": "iZAEabZqs1KcJLLlvgYhopU7i9F22IVPx8bSjXxMGQhe8LywL+9r/eAuMxoAwFF1kfmoRa+b3yB9DTh06q5n9Q==",
            "content_md5": "9b41dd27b8452666f9c8a089d7f7d879",
            "content_sha1": "edbf8a6e122fb5ef851aa6c0c1c6d55dcc9eadc6",
            "content_sha256": "b77f5146559b48293e493a74e908b9639e85a83c8dfb31ab554fa7e63b385175",
            "content_sha512": "89900469b66ab3529c24b2e5be0621a2953b8bd176d8854fc7c6d28d7c4c19085ef0bcb02fef6bfde02e331a00c0517591f9a845af9bdf207d0d3874eaae67f5",
            "filename": "../../../../private/preqa/demo/tmp/new-network.plugin.secrets.json",
            "id": "edbf8a6e122fb5ef851aa6c0c1c6d55dcc9eadc6"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "secretsmanager_yaml",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "serviceAccount:\n  create: true\n  annotations:\n    eks.amazonaws.com/role-arn: \"arn:aws:iam::393541031529:role/preqa-demo-quorum-node-role\"\nsecretProviderClass:\n  enabled: true\n  spec:\n    provider: aws\n    parameters:\n      objects: |\n        - objectName: \"arn:aws:secretsmanager:eu-west-1:393541031529:secret:preqa-demo-quorum-node20240205150842489200000001-S0m3z6\"\n          objectType: \"secretsmanager\"\n          jmesPath: \n            - path: nodekey\n              objectAlias: nodekey\n",
            "content_base64": "c2VydmljZUFjY291bnQ6CiAgY3JlYXRlOiB0cnVlCiAgYW5ub3RhdGlvbnM6CiAgICBla3MuYW1hem9uYXdzLmNvbS9yb2xlLWFybjogImFybjphd3M6aWFtOjozOTM1NDEwMzE1Mjk6cm9sZS9wcmVxYS1kZW1vLXF1b3J1bS1ub2RlLXJvbGUiCnNlY3JldFByb3ZpZGVyQ2xhc3M6CiAgZW5hYmxlZDogdHJ1ZQogIHNwZWM6CiAgICBwcm92aWRlcjogYXdzCiAgICBwYXJhbWV0ZXJzOgogICAgICBvYmplY3RzOiB8CiAgICAgICAgLSBvYmplY3ROYW1lOiAiYXJuOmF3czpzZWNyZXRzbWFuYWdlcjpldS13ZXN0LTE6MzkzNTQxMDMxNTI5OnNlY3JldDpwcmVxYS1kZW1vLXF1b3J1bS1ub2RlMjAyNDAyMDUxNTA4NDI0ODkyMDAwMDAwMDEtUzBtM3o2IgogICAgICAgICAgb2JqZWN0VHlwZTogInNlY3JldHNtYW5hZ2VyIgogICAgICAgICAgam1lc1BhdGg6IAogICAgICAgICAgICAtIHBhdGg6IG5vZGVrZXkKICAgICAgICAgICAgICBvYmplY3RBbGlhczogbm9kZWtleQo=",
            "content_base64sha256": "gArKJPmgvN/8uJl6DK2Oz/w/42nQmumLHEdhBFC3Rmg=",
            "content_base64sha512": "W9JbCOIKEh0vPi+KhuCO7y2g1nBTShTj3rYRy/RnOWN2Esyhk2UsoDHv3WSwXbCAPOGt0WjKFvDUb28ghy5CFQ==",
            "content_md5": "32457182d073d92a96dd6879123c3e1e",
            "content_sha1": "91837b1ae8068a2a73057cce384940ebdf14b4f1",
            "content_sha256": "800aca24f9a0bcdffcb8997a0cad8ecffc3fe369d09ae98b1c47610450b74668",
            "content_sha512": "5bd25b08e20a121d2f3e2f8a86e08eef2da0d670534a14e3deb611cbf46739637612cca193652ca031efdd64b05db0803ce1add168ca16f0d46f6f20872e4215",
            "filename": "../../../../private/preqa/demo/tmp/secretsmanager.yaml",
            "id": "91837b1ae8068a2a73057cce384940ebdf14b4f1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::393541031529:role/preqa-demo-quorum-node-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.eu-west-1.amazonaws.com/id/CDBDC986C6F7A18E3B72109D63C01483:aud\":\"sts.amazonaws.com\",\"oidc.eks.eu-west-1.amazonaws.com/id/CDBDC986C6F7A18E3B72109D63C01483:sub\":\"system:serviceaccount:default:quorum\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::393541031529:oidc-provider/oidc.eks.eu-west-1.amazonaws.com/id/CDBDC986C6F7A18E3B72109D63C01483\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-02-05T15:08:20Z",
            "description": "",
            "force_detach_policies": false,
            "id": "preqa-demo-quorum-node-role",
            "inline_policy": [
              {
                "name": "preqa-demo-quorum-node-policy",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"secretsmanager:GetSecretValue\",\"secretsmanager:DescribeSecret\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:secretsmanager:eu-west-1:393541031529:secret:preqa-demo-quorum-node*\"]},{\"Action\":[\"kms:GenerateDataKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Resource\":[\"*\"]}]}"
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "preqa-demo-quorum-node-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {},
            "unique_id": "AROAVXIG7SZUXQI6RTE5V"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.main",
            "data.aws_eks_cluster.main",
            "data.aws_region.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:eu-west-1:393541031529:alias/eks/preqa-demo/quorum-node",
            "id": "alias/eks/preqa-demo/quorum-node",
            "name": "alias/eks/preqa-demo/quorum-node",
            "name_prefix": "",
            "target_key_arn": "arn:aws:kms:eu-west-1:393541031529:key/7619aba5-065e-450d-8bde-ac84e70760f0",
            "target_key_id": "7619aba5-065e-450d-8bde-ac84e70760f0"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.main",
            "aws_kms_key.main",
            "data.aws_caller_identity.main",
            "data.aws_eks_cluster.main",
            "data.aws_region.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:eu-west-1:393541031529:key/7619aba5-065e-450d-8bde-ac84e70760f0",
            "bypass_policy_lockout_safety_check": false,
            "custom_key_store_id": "",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": null,
            "description": "",
            "enable_key_rotation": true,
            "id": "7619aba5-065e-450d-8bde-ac84e70760f0",
            "is_enabled": true,
            "key_id": "7619aba5-065e-450d-8bde-ac84e70760f0",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "policy": "{\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::393541031529:root\"},\"Resource\":\"*\",\"Sid\":\"Enable IAM User Permissions\"},{\"Action\":[\"kms:Encrypt*\",\"kms:Decrypt*\",\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Describe*\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::393541031529:role/preqa-demo-quorum-node-role\"},\"Resource\":\"*\",\"Sid\":\"Enable IAM User Permissions\"}],\"Version\":\"2012-10-17\"}",
            "tags": {
              "Cluster": "demo",
              "Name": "eks/preqa-demo/quorum-node",
              "Network": "preqa"
            },
            "tags_all": {
              "Cluster": "demo",
              "Name": "eks/preqa-demo/quorum-node",
              "Network": "preqa"
            },
            "timeouts": null,
            "xks_key_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_iam_role.main",
            "data.aws_caller_identity.main",
            "data.aws_eks_cluster.main",
            "data.aws_region.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_secretsmanager_secret",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:secretsmanager:eu-west-1:393541031529:secret:preqa-demo-quorum-node20240205150842489200000001-S0m3z6",
            "description": "",
            "force_overwrite_replica_secret": false,
            "id": "arn:aws:secretsmanager:eu-west-1:393541031529:secret:preqa-demo-quorum-node20240205150842489200000001-S0m3z6",
            "kms_key_id": "arn:aws:kms:eu-west-1:393541031529:key/7619aba5-065e-450d-8bde-ac84e70760f0",
            "name": "preqa-demo-quorum-node20240205150842489200000001",
            "name_prefix": "preqa-demo-quorum-node",
            "policy": "",
            "recovery_window_in_days": 30,
            "replica": [],
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.main",
            "aws_kms_key.main",
            "data.aws_caller_identity.main",
            "data.aws_eks_cluster.main",
            "data.aws_region.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_secretsmanager_secret_policy",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "block_public_policy": null,
            "id": "arn:aws:secretsmanager:eu-west-1:393541031529:secret:preqa-demo-quorum-node20240205150842489200000001-S0m3z6",
            "policy": "{\"Statement\":[{\"Action\":[\"secretsmanager:GetSecretValue\",\"secretsmanager:DescribeSecret\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::393541031529:role/preqa-demo-quorum-node-role\"},\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "secret_arn": "arn:aws:secretsmanager:eu-west-1:393541031529:secret:preqa-demo-quorum-node20240205150842489200000001-S0m3z6"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.main",
            "aws_kms_key.main",
            "aws_secretsmanager_secret.main",
            "data.aws_caller_identity.main",
            "data.aws_eks_cluster.main",
            "data.aws_region.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_secretsmanager_secret_version",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:secretsmanager:eu-west-1:393541031529:secret:preqa-demo-quorum-node20240205150842489200000001-S0m3z6",
            "id": "arn:aws:secretsmanager:eu-west-1:393541031529:secret:preqa-demo-quorum-node20240205150842489200000001-S0m3z6|terraform-20240205150843057600000003",
            "secret_binary": "",
            "secret_id": "arn:aws:secretsmanager:eu-west-1:393541031529:secret:preqa-demo-quorum-node20240205150842489200000001-S0m3z6",
            "secret_string": "{\"nodekey\":\"64ab607c10e4959e04fea5eda9e23dea4b535ef53165657be12dc3baf04b877d\"}",
            "version_id": "terraform-20240205150843057600000003",
            "version_stages": [
              "AWSCURRENT"
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.main",
            "aws_kms_key.main",
            "aws_secretsmanager_secret.main",
            "data.aws_caller_identity.main",
            "data.aws_eks_cluster.main",
            "data.aws_region.main",
            "data.local_file.config_context_sh",
            "data.local_file.join_network_plugin_secrets_json",
            "data.local_file.new_network_plugin_secrets_json"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "quorum-node",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "qn-0",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "23.4.0",
                "chart": "quorum-node",
                "name": "qn-0",
                "namespace": "default",
                "revision": 1,
                "values": "{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"topology.kubernetes.io/zone\",\"operator\":\"In\",\"values\":[\"eu-west-1a\"]}]}]}}},\"deployment\":{\"NAT\":\"1.2.3.4\",\"company\":\"demo\",\"enode_address\":\"52.213.155.18\",\"enode_address_port\":\"30303\",\"network_name\":\"preqa\"},\"deploymentStrategy\":{\"type\":\"Recreate\"},\"extraResources\":null,\"fullnameOverride\":\"quorum\",\"image\":{\"pullPolicy\":\"Always\",\"repository\":\"quorumengineering/quorum\",\"sha\":\"bab0a966b3dedeb102b402ba86c1fc02050416f2ce6d153356342fcc9424456e\",\"tag\":\"23.4.0\"},\"imagePullSecrets\":[],\"kubectl\":{\"image\":{\"pullPolicy\":\"Always\",\"repository\":\"bitnami/kubectl\",\"sha\":\"bba32da4e7d08ce099e40c573a2a5e4bdd8b34377a1453a69bbb6977a04e8825\",\"tag\":\"1.21.14\"},\"podSecurityContext\":{\"fsGroup\":65534,\"runAsGroup\":65534,\"runAsUser\":65534},\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"128Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsGroup\":65534,\"runAsNonRoot\":true,\"runAsUser\":65534},\"ttlSecondsAfterFinished\":300},\"nameOverride\":\"\",\"nodeSelector\":{},\"persistence\":{\"data\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"dataSource\":{},\"existingClaim\":\"\",\"finalizers\":[\"kubernetes.io/pvc-protection\"],\"selectorLabels\":{},\"size\":\"3Gi\",\"storageClassName\":\"\",\"volumeSnapshots\":{\"apiVersion\":\"v1\",\"className\":\"\",\"finalSnapshotEnabled\":false,\"preUpgradeEnabled\":false,\"waitForReadyToUse\":true}},\"logs\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"dataSource\":{},\"enabled\":true,\"existingClaim\":\"\",\"finalizers\":[\"kubernetes.io/pvc-protection\"],\"selectorLabels\":{},\"size\":\"1Gi\",\"storageClassName\":\"\",\"volumeSnapshots\":{\"apiVersion\":\"v1\",\"className\":\"\",\"finalSnapshotEnabled\":false,\"preUpgradeEnabled\":false,\"waitForReadyToUse\":true}}},\"podAnnotations\":{},\"podLabels\":{},\"podSecurityContext\":{\"fsGroup\":10000,\"runAsGroup\":10000,\"runAsUser\":10000},\"quorum\":{\"dataDirPath\":\"/quorum/home/dd\",\"extraArgs\":\"--snapshot=false --txlookuplimit=0 --cache.preimages --rpc.allow-unprotected-txs\",\"genesisFilePath\":\"/quorum/home/genesis/genesis-geth.json\",\"homeMountPath\":\"/quorum/home\",\"log\":{\"emitcheckpoints\":true,\"verbosity\":3},\"logsMountPath\":\"/quorum/logs\",\"metrics\":{\"addr\":\"0.0.0.0\",\"enabled\":true,\"expensive\":false,\"port\":9545,\"prometheusAnnotationsEnabled\":true},\"miner\":{\"blockPeriod\":3,\"threads\":1},\"networkId\":10,\"rpc\":{\"api\":\"admin,eth,debug,miner,net,txpool,personal,web3,istanbul\",\"corsDomain\":\"*\",\"vHosts\":\"*\"}},\"replicasCount\":1,\"resources\":{},\"secretProviderClass\":{\"apiVersion\":\"secrets-store.csi.x-k8s.io/v1\",\"enabled\":true,\"spec\":{\"parameters\":{\"objects\":\"- objectName: \\\"arn:aws:secretsmanager:eu-west-1:393541031529:secret:preqa-demo-quorum-node20240205150842489200000001-S0m3z6\\\"\\n  objectType: \\\"secretsmanager\\\"\\n  jmesPath: \\n    - path: nodekey\\n      objectAlias: nodekey\\n\"},\"provider\":\"aws\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsGroup\":10000,\"runAsNonRoot\":true,\"runAsUser\":10000},\"service\":{\"p2p\":{\"annotations\":{\"service.beta.kubernetes.io/aws-load-balancer-attributes\":\"load_balancing.cross_zone.enabled=true,deletion_protection.enabled=false\",\"service.beta.kubernetes.io/aws-load-balancer-eip-allocations\":\"eipalloc-0bfb9dd66e7ea5648\",\"service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold\":\"2\",\"service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold\":\"2\",\"service.beta.kubernetes.io/aws-load-balancer-ip-address-type\":\"ipv4\",\"service.beta.kubernetes.io/aws-load-balancer-name\":\"preqa-demo-quorum-node-qn-0\",\"service.beta.kubernetes.io/aws-load-balancer-nlb-target-type\":\"ip\",\"service.beta.kubernetes.io/aws-load-balancer-scheme\":\"internet-facing\",\"service.beta.kubernetes.io/aws-load-balancer-subnets\":\"subnet-03f6f7ef7423f735c\",\"service.beta.kubernetes.io/aws-load-balancer-target-group-attributes\":\"preserve_client_ip.enabled=true,deregistration_delay.timeout_seconds=120,deregistration_delay.connection_termination.enabled=true,stickiness.enabled=true,stickiness.type=source_ip\",\"service.beta.kubernetes.io/aws-load-balancer-type\":\"external\"},\"enabled\":true,\"loadBalancerIP\":\"\",\"loadBalancerSourceRanges\":null,\"port\":30303,\"type\":\"LoadBalancer\"},\"rpc\":{\"annotations\":{},\"enabled\":true,\"loadBalancerIP\":\"\",\"loadBalancerSourceRanges\":null,\"port\":8545,\"type\":\"ClusterIP\"}},\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::393541031529:role/preqa-demo-quorum-node-role\"},\"automountServiceAccountToken\":false,\"create\":true,\"name\":\"\"},\"tolerations\":[],\"use_case\":{\"joinNetwork\":{\"enabled\":false,\"plugin_data_common\":\"{\\n  \\\"enode\\\": \\\"joinNetwork_enode\\\",\\n  \\\"nodeKeyPublic\\\": \\\"joinNetwork_nodeKeyPublic\\\",\\n  \\\"genesis\\\": \\\"{ \\\\\\\"key\\\\\\\": \\\\n\\\"value\\\\\\\" }\\\"\\n}\",\"plugin_data_secrets\":\"{\\n  \\\"nodeKey\\\": \\\"joinNetwork_nodeKey\\\"\\n}\"},\"newNetwork\":{\"enabled\":true,\"plugin_data_common\":\"{\\\"extradata\\\":\\\"0x0000000000000000000000000000000000000000000000000000000000000000d8d594321be8365fa006a801793d5cc95d54f9f5da549780c0\\\",\\\"enode\\\":\\\"8f938c81eac18693f40b9324119002faf6e228169e0d26b447940055c899f6d166d07e7f237080751112ad2cc76cc51d30d9d7d710129a35a00ec7b4ff2f0332\\\",\\\"nodeKeyPublic\\\":\\\"0x321Be8365FA006A801793d5cc95d54f9f5da5497\\\",\\\"genesisAccount\\\":\\\"0xcd7b0409b89523d98a98dbebe89d6e6d60f92274\\\"}\",\"plugin_data_secrets\":\"{\\\"nodeKey\\\":\\\"64ab607c10e4959e04fea5eda9e23dea4b535ef53165657be12dc3baf04b877d\\\",\\\"genesisKeyStoreAccount\\\":\\\"eyJhZGRyZXNzIjoiY2Q3YjA0MDliODk1MjNkOThhOThkYmViZTg5ZDZlNmQ2MGY5MjI3NCIsImNyeXB0byI6eyJjaXBoZXIiOiJhZXMtMTI4LWN0ciIsImNpcGhlcnRleHQiOiI3NTk1MzkwNjExOThkOWY5MmU5NjFiMWZlMDgxMWRkMzU2MmUzZDU3MjE4NjI3NjgxNjIzY2JiODdiODU4NjJkIiwiY2lwaGVycGFyYW1zIjp7Iml2IjoiNzVjMGE1ZGYwYzNlNmE0NGY4NDc5YzM5Yzc2MWVmZTMifSwibWFjIjoiYzAyMDZjMzAzNTRjZjZjM2QyNzBjMWQ1ZWVmZjQ5ZGI4Mzc1M2VlMGYwMjdiZTYzNGQwMWZhNGQ2YmUyZTJmMSIsImtkZiI6InNjcnlwdCIsImtkZnBhcmFtcyI6eyJka2xlbiI6MzIsIm4iOjI2MjE0NCwiciI6OCwicCI6MSwic2FsdCI6IjM5Zjg4NzAxMGZiOGI5NDJlNzhmMTMyN2FlNDA1NmI5NThiMWQzODViN2NhZTkyNWQxMzBmNWY4MDYzNjQwMzcifX0sImlkIjoiYzFiOTI4OWQtODU3MS00MTcwLWJhYTktZTEyODBiZDBmZGI1IiwidmVyc2lvbiI6M30=\\\",\\\"genesisKeyStoreAccountEncryptionPassword\\\":\\\"3TS0mvOG8lBLTv0VhmY8\\\",\\\"genesisAccountPrivateKey\\\":{\\\"type\\\":\\\"Buffer\\\",\\\"data\\\":[142,100,110,143,253,111,229,188,106,119,204,49,118,95,208,78,122,21,61,192,218,136,91,255,123,253,169,214,135,59,200,155]}}\"},\"promoteValidators\":{\"enabled\":false},\"updatePartnersInfo\":{\"enabled\":false,\"plugin_data_common\":\"{\\n  \\\"peers\\\": [\\n    {\\n      \\\"enode\\\": \\\"peer1_enode\\\",\\n      \\\"enodeAddress\\\": \\\"peer1_enodeAddress\\\",\\n      \\\"enodeAddressPort\\\": \\\"peer1_enodeAddressPort\\\",\\n      \\\"nodeKeyPublic\\\": \\\"peer1_nodeKeyPublic\\\"\\n    },\\n    {\\n      \\\"enode\\\": \\\"peer2_enode\\\",\\n      \\\"enodeAddress\\\": \\\"peer2_enodeAddress\\\",\\n      \\\"enodeAddressPort\\\": \\\"peer2_enodeAddressPort\\\",\\n      \\\"nodeKeyPublic\\\": \\\"peer2_nodeKeyPublic\\\"\\n    }\\n  ]\\n}\"}}}",
                "version": "0.6.7"
              }
            ],
            "name": "qn-0",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": true,
            "repository": "https://axiologic-pla.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Default values.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nimage:\n  # -- The repository of the Quorum container image\n  repository: quorumengineering/quorum\n  # -- Image Pull Policy\n  pullPolicy: Always\n  # -- Image tag\n  tag: \"23.4.0\"\n  # -- sha256 digest of the image.\n  # Do not add the prefix \"@sha256:\".\n  # \u003c!-- # pragma: allowlist secret --\u003e\n  sha: \"bab0a966b3dedeb102b402ba86c1fc02050416f2ce6d153356342fcc9424456e\"  # pragma: allowlist secret\n\n## -- The strategy of the deployment. Defaults to Recreate as a PVC is bound to it.\n## See `kubectl explain deployment.spec.strategy` for more and [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy)\ndeploymentStrategy:\n  type: Recreate\n\n# Quorum configuration settings.\nquorum:\n  # -- Directory path to where the persistent volume \"data\" will be mounted to.\n  # Also some config file will be mounted there.\n  homeMountPath: \"/quorum/home\"\n  # -- Directory path to where the persistent volume \"logs\" will be mounted to.\n  logsMountPath: \"/quorum/logs\"\n  # -- Directory path to the Quorum Data Dir. Must be beyond 'homeMountPath' in order to store data on the persistent volume.\n  dataDirPath: \"/quorum/home/dd\"\n  # -- File path to genesis file\n  genesisFilePath: \"/quorum/home/genesis/genesis-geth.json\"\n  # -- Explicitly set network id\n  networkId: 10\n\n  miner:\n    # -- Number of CPU threads to use for mining\n    threads: 1\n    # -- Default minimum difference between two consecutive block's timestamps in seconds\n    blockPeriod: 3\n\n  log:\n    # -- Logging verbosity: 0=silent, 1=error, 2=warn, 3=info, 4=debug, 5=detail\n    verbosity: 3\n    # -- If enabled, emit specially formatted logging checkpoints\n    emitcheckpoints: true\n\n  rpc:\n    corsDomain: \"*\"\n    # -- The virtual hostnames for the RPC endpoint to listen for.\n    # If you want to restrict it, use {name}-rpc,{name}-rpc.{namespace},{name}-rpc.{namespace}.svc.cluster.local\n    vHosts: \"*\"\n    # -- The activated APIs at RPC endpoint.\n    api: \"admin,eth,debug,miner,net,txpool,personal,web3,istanbul\"\n\n  metrics:\n    # -- Enable metrics endpoint which allows monitoring, e.g. via Prometheus\n    enabled: true\n    # -- Enable expensive metrics collection and reporting.\n    expensive: false\n    # -- Enable stand-alone metrics HTTP server listening interface.\n    addr: \"0.0.0.0\"\n    # -- Metrics HTTP server listening port.\n    port: 9545\n    # -- Add annotations for Prometheus to discover metrics endpoint.\n    prometheusAnnotationsEnabled: true\n\n  # -- Generic extra/additional arguments passed to geth.\n  # See https://blog.ethereum.org/2021/03/03/geth-v1-10-0/#compatibility\n  # For geth 1.9.x (Quorum v21), set \"--nousb\"\n  # For geth 1.10.x (Quorum v22) with high compatibility to 1.9.x (Quorum v21), set \"--snapshot=false --txlookuplimit=0 --cache.preimages --rpc.allow-unprotected-txs\"\n  extraArgs: |-\n    --snapshot=false --txlookuplimit=0 --cache.preimages --rpc.allow-unprotected-txs\n#    --nousb\n\nuse_case:\n  newNetwork:\n    # -- Enable the new-network use case. Can only be used in collaboration with updatePartnerInfo use case\n    enabled: true\n    plugin_data_common: \u003e-\n      {\n        \"extradata\": \"newNetwork_extradata\",\n        \"enode\": \"newNetwork_Enode\",\n        \"nodeKeyPublic\": \"newNetwork_NodeKeyPublic\",\n        \"genesisAccount\": \"newNetwork_genesisAccount\"\n      }\n    # -- Sensitive data.\n    # A JSON object containing two attributes:\n    # 1. \"genesisKeyStoreAccount\" = a base64 encoded value.\n    # 2. \"nodeKey\" = The secret private node key.\n    # \u003c!-- pragma: allowlist secret --\u003e\n    plugin_data_secrets: \u003e- # pragma: allowlist secret\n      {\n        \"genesisKeyStoreAccount\": \"ewogICAgImFkZHJlc3MiOiAidGVzdGRhdGEiLAogICAgImNyeXB0byI6IHsKICAgICAgICAiY2lwaGVyIjogImFlcy0xMjgtY3RyIiwKICAgICAgICAiY2lwaGVydGV4dCI6ICJ0ZXN0ZGF0YSIsCiAgICAgICAgImNpcGhlcnBhcmFtcyI6IHsKICAgICAgICAgICAgIml2IjogInRlc3RkYXRhIgogICAgICAgIH0sCiAgICAgICAgIm1hYyI6ICJ0ZXN0ZGF0YSIsCiAgICAgICAgImtkZiI6ICJzY3J5cHQiLAogICAgICAgICJrZGZwYXJhbXMiOiB7CiAgICAgICAgICAgICJka2xlbiI6IDMyLAogICAgICAgICAgICAibiI6IDI2MjE0NCwKICAgICAgICAgICAgInIiOiA4LAogICAgICAgICAgICAicCI6IDEsCiAgICAgICAgICAgICJzYWx0IjogInRlc3RkYXRhIgogICAgICAgIH0KICAgIH0sCiAgICAiaWQiOiAidGVzdGRhdGEiLAogICAgInZlcnNpb24iOiAzCn0=\",\n        \"nodeKey\": \"newNetwork_NodeKey\"\n      }\n\n  joinNetwork:\n    # -- Enable the join-network use case. Can only be used in collaboration with updatePartnerInfo use case\n    enabled: false\n    # -- Non-sensitive data.\n    # A JSON object containing three attribute:\n    # 1. \"enode\" = The enode.\n    # 2. \"nodeKeyPublic\" = The public key of the node starting with \"0x\".\n    # 3. \"genesis\" = The genesis JSON file in JSON encoded format.\n    plugin_data_common: \u003e-\n      {\n        \"enode\": \"joinNetwork_enode\",\n        \"nodeKeyPublic\": \"joinNetwork_nodeKeyPublic\",\n        \"genesis\": \"{ \\\"key\\\": \\n\"value\\\" }\"\n      }\n    # -- Sensitive data.\n    # A JSON object containing one attribute:\n    # 1. \"nodeKey\" = The secret private node key.\n    plugin_data_secrets: \u003e-\n      {\n        \"nodeKey\": \"joinNetwork_nodeKey\"\n      }\n\n  updatePartnersInfo:\n    # -- Enable the update-partners-info use case.\n    # Can only be used in collaboration with new-network or join-network use case.\n    enabled: false\n    plugin_data_common: \u003e-\n      {\n        \"peers\": [\n          {\n            \"enode\": \"peer1_enode\",\n            \"enodeAddress\": \"peer1_enodeAddress\",\n            \"enodeAddressPort\": \"peer1_enodeAddressPort\",\n            \"nodeKeyPublic\": \"peer1_nodeKeyPublic\"\n          },\n          {\n            \"enode\": \"peer2_enode\",\n            \"enodeAddress\": \"peer2_enodeAddress\",\n            \"enodeAddressPort\": \"peer2_enodeAddressPort\",\n            \"nodeKeyPublic\": \"peer2_nodeKeyPublic\"\n          }\n        ]\n      }\n\n  promoteValidators:\n  # -- Enable post update job for promoting all peers listed in updatePartnersInfo to be promoted to validators\n  # Default false\n    enabled: false\n\n# Persistence using Persistent Volume Claims\n# See [http://kubernetes.io/docs/user-guide/persistent-volumes/](http://kubernetes.io/docs/user-guide/persistent-volumes/)\npersistence:\n  # Settings for the data PVC.\n  data:\n    # -- The name of an existing PVC to use instead of creating a new one.\n    existingClaim: \"\"\n    # -- Name of the storage class for data PVC.\n    # If empty or not set then storage class will not be set - which means that the default storage class will be used.\n    storageClassName: \"\"\n    # -- Size of the data PVC volume.\n    size: \"3Gi\"\n    # -- Annotations for the data PVC.\n    annotations: {}\n    # -- Finalizers for data PVC.\n    # See [https://kubernetes.io/docs/concepts/storage/persistent-volumes/#storage-object-in-use-protection](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#storage-object-in-use-protection)\n    finalizers:\n      - kubernetes.io/pvc-protection\n    # -- AccessModes for the data PVC.\n    # See [https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes)\n    accessModes:\n      - ReadWriteOnce\n    # -- Selector Labels for the data PVC.\n    # See [https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector)\n    selectorLabels: {}\n    # -- DataSource option for cloning an existing volume or creating from a snapshot for data PVC.\n    # Take a look at values.yaml for more details.\n    dataSource: {}\n      # # For cloning from an existing volume\n      # # See [https://kubernetes.io/docs/concepts/storage/volume-pvc-datasource/](https://kubernetes.io/docs/concepts/storage/volume-pvc-datasource/)\n      # kind: PersistentVolumeClaim\n      # name: pvc-1\n\n      # # For creating from a snapshot (here AWS)\n      # # [https://aws.amazon.com/blogs/containers/migrating-amazon-eks-clusters-from-gp2-to-gp3-ebs-volumes/](https://aws.amazon.com/blogs/containers/migrating-amazon-eks-clusters-from-gp2-to-gp3-ebs-volumes/)\n      # name: imported-aws-snapshot\n      # kind: VolumeSnapshot\n      # apiGroup: snapshot.storage.k8s.io\n\n    volumeSnapshots:\n      # -- Whether to create snapshots before helm upgrading or not.\n      # The name of the VolumeSnapshot will be \"\u003chelm release name\u003e-upgrade-to-revision-\u003chelm revision\u003e-\u003cUTC timestamp YYYYMMDDHHMM\u003e\", e.g. \"epi-upgrade-to-revision-19-202206221211\"\n      preUpgradeEnabled: false\n      # -- Whether to create final snapshot before delete.\n      # The name of the VolumeSnapshot will be \"\u003chelm release name\u003e-final-\u003cUTC timestamp YYYYMMDDHHMM\u003e\", e.g. \"epi-final-202206221213\"\n      finalSnapshotEnabled: false\n      # -- API Version of the \"snapshot.storage.k8s.io\" resource.\n      # See [https://kubernetes.io/docs/concepts/storage/volume-snapshots/](https://kubernetes.io/docs/concepts/storage/volume-snapshots/)\n      apiVersion: \"v1\"\n      # -- The Volume Snapshot class name.\n      # See [https://kubernetes.io/docs/concepts/storage/volume-snapshot-classes/](https://kubernetes.io/docs/concepts/storage/volume-snapshot-classes/)\n      className: \"\"\n      # -- Whether to wait until the VolumeSnapshot is ready to use.\n      # Note: On first snapshot this may take a while.\n      waitForReadyToUse: true\n\n  # Settings for the logging PVC.\n  logs:\n    # -- Enables logging to a persistent volume.\n    # if disabled, logging will be to stdout only.\n    enabled: true\n    # -- The name of an existing PVC to use instead of creating a new one.\n    existingClaim: \"\"\n    # -- Name of the storage class for logs PVC.\n    # If empty or not set then storage class will not be set - which means that the default storage class will be used.\n    storageClassName: \"\"\n    # -- Size of the logs PVC volume.\n    size: \"1Gi\"\n    # -- Annotations for the logs PVC.\n    annotations: {}\n    # -- Finalizers for logs PVC.\n    # See [https://kubernetes.io/docs/concepts/storage/persistent-volumes/#storage-object-in-use-protection](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#storage-object-in-use-protection)\n    finalizers:\n      - kubernetes.io/pvc-protection\n    # -- AccessModes for the logs PVC.\n    # See [https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes)\n    accessModes:\n      - ReadWriteOnce\n    # -- Selector Labels for the logs PVC.\n    # See [https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector)\n    selectorLabels: {}\n    # -- DataSource option for cloning an existing volume or creating from a snapshot for logs PVC.\n    # Take a look at values.yaml for more details.\n    dataSource: {}\n      # # For cloning from an existing volume\n      # # See [https://kubernetes.io/docs/concepts/storage/volume-pvc-datasource/](https://kubernetes.io/docs/concepts/storage/volume-pvc-datasource/)\n      # kind: PersistentVolumeClaim\n      # name: pvc-1\n\n      # # For creating from a snapshot (here AWS)\n      # # [https://aws.amazon.com/blogs/containers/migrating-amazon-eks-clusters-from-gp2-to-gp3-ebs-volumes/](https://aws.amazon.com/blogs/containers/migrating-amazon-eks-clusters-from-gp2-to-gp3-ebs-volumes/)\n      # name: imported-aws-snapshot\n      # kind: VolumeSnapshot\n      # apiGroup: snapshot.storage.k8s.io\n    volumeSnapshots:\n      # -- Whether to create snapshots before helm upgrading or not.\n      # The name of the VolumeSnapshot will be \"\u003chelm release name\u003e-upgrade-to-revision-\u003chelm revision\u003e-\u003cUTC timestamp YYYYMMDDHHMM\u003e\", e.g. \"epi-upgrade-to-revision-19-202206221211\"\n      preUpgradeEnabled: false\n      # -- Whether to create final snapshot before delete.\n      # The name of the VolumeSnapshot will be \"\u003chelm release name\u003e-final-\u003cUTC timestamp YYYYMMDDHHMM\u003e\", e.g. \"epi-final-202206221213\"\n      finalSnapshotEnabled: false\n      # -- API Version of the \"snapshot.storage.k8s.io\" resource.\n      # See [https://kubernetes.io/docs/concepts/storage/volume-snapshots/](https://kubernetes.io/docs/concepts/storage/volume-snapshots/)\n      apiVersion: \"v1\"\n      # -- The Volume Snapshot class name.\n      # See [https://kubernetes.io/docs/concepts/storage/volume-snapshot-classes/](https://kubernetes.io/docs/concepts/storage/volume-snapshot-classes/)\n      className: \"\"\n      # -- Whether to wait until the VolumeSnapshot is ready to use.\n      # Note: On first snapshot this may take a while.\n      waitForReadyToUse: true\n\n# -- Number of replicas for the quorum-node !! DO NOT CHANGE !!\nreplicasCount: 1\n# -- Override the full name\nfullnameOverride: \"\"\n# -- override the name\nnameOverride: \"\"\n\n# -- Secret(s) for pulling an container image from a private registry.\n# See [https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)\nimagePullSecrets: []\n\nservice:\n  p2p:\n    # -- Whether to deploy the P2P service or not.\n    enabled: true\n    # -- Either ClusterIP, NodePort or LoadBalancer for P2P Service.\n    # See [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)\n    type: ClusterIP\n    # -- Port where the P2P service will be exposed.\n    port: 30303\n    # -- Annotations for the P2P service.\n    # See AWS, see [https://kubernetes.io/docs/concepts/services-networking/service/#ssl-support-on-aws](https://kubernetes.io/docs/concepts/services-networking/service/#ssl-support-on-aws)\n    # For Azure, see [https://kubernetes-sigs.github.io/cloud-provider-azure/topics/loadbalancer/#loadbalancer-annotations](https://kubernetes-sigs.github.io/cloud-provider-azure/topics/loadbalancer/#loadbalancer-annotations)\n    annotations: {}\n      # Let Kubernetes In-tree LoadBalancer controller NOT process this resource (but AWS LB controller 2.2 in this case)\n      # See https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/service/nlb/#configuration\n      # service.beta.kubernetes.io/aws-load-balancer-type: \"external\"\n      # We want the NLB to be Internet-facing (public)\n      # See https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/service/annotations/#lb-scheme\n      # service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing\n      # A custom name\n      # See https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/service/annotations/#load-balancer-name\n      # service.beta.kubernetes.io/aws-load-balancer-name: qn-0\n      # Forward traffic to EC2 Instance (thus, a nodePort on the instance will be used)\n      # See https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/service/nlb/#instance-mode_1\n      # and https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/service/annotations/#nlb-target-type\n      # service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance\n      # IPv4 only\n      # See https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/service/annotations/#ip-address-type\n      # service.beta.kubernetes.io/aws-load-balancer-ip-address-type: ipv4\n      # Important: Preserve Client (public) IP address of caller on forwarding traffic to target\n      # See https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/service/annotations/#target-group-attributes\n      # service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=true,deregistration_delay.timeout_seconds=120,deregistration_delay.connection_termination.enabled=true,stickiness.enabled=true,stickiness.type=source_ip\n      # Healthcheck setting - must be within [2, 10] - defaults to 3\n      # We use the mininum of 2 to add/remove targets faster from target group\n      # service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: \"2\"\n      # service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: \"2\"\n      # Use a static Elastic IP address - Elastic IP Allocation IDs required!\n      # From offical docs: Public Facing lb only. Length/order must match subnets\n      # service.beta.kubernetes.io/aws-load-balancer-eip-allocations: eipalloc-0aaXXXXXXXXXXXXXX\n      # We put the NLB into a certain public subnet only - You can provide the subnet ID or the value of the 'Name' tag\n      # From offical docs: You must specify at least one subnet in any of the AZs, both subnetID or subnetName(Name tag on subnets) can be used.\n      # See: https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/service/annotations/#subnets\n      # service.beta.kubernetes.io/aws-load-balancer-subnets: eks-ireland-1-vpc-public-eu-west-1b\n      # Only set to true if NLBs subnet is in a different availability zone than the zone affinity of the deployment.\n      # service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: \"false\"\n      # 1. Load Balancer Proxy Protocol does not work for HTTP based workload!\n      # 2. We do not need the Load Balancer Proxy Protocol in our use case, therefore we do not enable it\n      # service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: \"*\"\n\n      # Do not use. Use spec.loadBalancerSourceRanges instead!\n      # service.beta.kubernetes.io/load-balancer-source-ranges: \"8.8.8.8/32,8.8.4.4/32\"\n\n    # -- A list of CIDR ranges to whitelist for ingress traffic to the P2P service if type is LoadBalancer.\n    # If list is empty, Kubernetes allows traffic from 0.0.0.0/0 to the Node Security Group(s)\n    loadBalancerSourceRanges:\n      # - 8.8.8.8/32\n      # - 8.8.4.4/32\n    # -- A static IP address for the LoadBalancer if type is LoadBalancer.\n    # Note: This only applies to certain Cloud providers like Google or [Azure](https://docs.microsoft.com/en-us/azure/aks/static-ip).\n    # [https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer](https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer).\n    loadBalancerIP: \"\"\n\n  rpc:\n    # -- Whether to deploy the RPC service or not.\n    enabled: true\n    # -- Either ClusterIP, NodePort or LoadBalancer for RPC Service.\n    # See [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)\n    type: ClusterIP\n    # -- Port where the RPC service will be exposed.\n    port: 8545\n    # -- Annotations for the RPC service.\n    # See AWS, see [https://kubernetes.io/docs/concepts/services-networking/service/#ssl-support-on-aws](https://kubernetes.io/docs/concepts/services-networking/service/#ssl-support-on-aws)\n    # For Azure, see [https://kubernetes-sigs.github.io/cloud-provider-azure/topics/loadbalancer/#loadbalancer-annotations](https://kubernetes-sigs.github.io/cloud-provider-azure/topics/loadbalancer/#loadbalancer-annotations)\n    annotations: {}\n    # -- A list of CIDR ranges to whitelist for ingress traffic to the RPC service if type is LoadBalancer.\n    # If list is empty, Kubernetes allows traffic from 0.0.0.0/0 to the Node Security Group(s)\n    loadBalancerSourceRanges:\n      # - 8.8.8.8/32\n      # - 8.8.4.4/32\n    # -- A static IP address for the LoadBalancer if type is LoadBalancer.\n    # Note: This only applies to certain Cloud providers like Google or [Azure](https://docs.microsoft.com/en-us/azure/aks/static-ip).\n    # [https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer](https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer).\n    loadBalancerIP: \"\"\n\n# -- Affinity for scheduling a pod.\n# See [https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)\n#\n# Notes for AWS: We want to schedule the pod in a certain availability zone, here eu-west-1a\n# Must be the same zone as the NLB - see service annotation service.beta.kubernetes.io/aws-load-balancer-subnets\n# Please note, that your nodes must be labeled accordingly!\n# See [https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesiozone](https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesiozone)\naffinity: {}\n  # nodeAffinity:\n  #   requiredDuringSchedulingIgnoredDuringExecution:\n  #     nodeSelectorTerms:\n  #       - matchExpressions:\n  #           - key: topology.kubernetes.io/zone\n  #             operator: In\n  #             values:\n  #               - eu-west-1a\n\n# -- Pod resources\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\n# -- Node Selectors in order to assign pods to certain nodes.\n# See [https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)\nnodeSelector: {}\n\n# -- Tolerations for scheduling a pod.\n# See [https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)\ntolerations: []\n\n# -- Annotations added to the pod\npodAnnotations: {}\n\n# -- Labels to add to the pod\npodLabels: {}\n\n# -- Security Context for the pod.\n# See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)\npodSecurityContext:\n  runAsUser: 10000\n  runAsGroup: 10000\n  fsGroup: 10000\n  # -- The SecComp configuration.\n  # Not enabled by default as not every environment supports it.\n  # [https://kubernetes.io/docs/tutorials/security/seccomp/](https://kubernetes.io/docs/tutorials/security/seccomp/)\n  # seccompProfile:\n  #   type: RuntimeDefault\n\n# -- Security Context for the application container\n# See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container)\nsecurityContext:\n  privileged: false\n  capabilities:\n    drop:\n    - ALL\n  readOnlyRootFilesystem: true\n  runAsNonRoot: true\n  runAsUser: 10000\n  runAsGroup: 10000\n  allowPrivilegeEscalation: false\n\n# Settings for Containers with kubectl installed used by Jobs \"pre-upgrade-volumesnapshot\", \"propose-validators\" and \"final-volumesnapshot\"\nkubectl:\n  # -- Time to keep the Job after finished in case of an error. If no error occured the Jobs will immediately by deleted.\n  # If value is not set, then 'ttlSecondsAfterFinished' will not be set.\n  ttlSecondsAfterFinished: 300\n\n  image:\n    # -- The repository of the container image containing kubectl\n    repository: bitnami/kubectl\n    # -- Image Pull Policy\n    pullPolicy: Always\n    # -- The Tag of the image containing kubectl. Minor Version should match to your Kubernetes Cluster Version.\n    tag: \"1.21.14\"\n    # -- sha256 digest of the image.\n    # Do not add the prefix \"@sha256:\"\n    # \u003cbr/\u003e\n    # Defaults to image digest for \"bitnami/kubectl:1.21.14\", see [https://hub.docker.com/layers/kubectl/bitnami/kubectl/1.21.14/images/sha256-f9814e1d2f1be7f7f09addd1d877090fe457d5b66ca2dcf9a311cf1e67168590?context=explore](https://hub.docker.com/layers/kubectl/bitnami/kubectl/1.21.14/images/sha256-f9814e1d2f1be7f7f09addd1d877090fe457d5b66ca2dcf9a311cf1e67168590?context=explore)\n    # \u003c!-- # pragma: allowlist secret --\u003e\n    sha: \"bba32da4e7d08ce099e40c573a2a5e4bdd8b34377a1453a69bbb6977a04e8825\"  # pragma: allowlist secret\n\n  # -- Resource constraints for the pre-builder and cleanup job\n  resources:\n    limits:\n      cpu: 100m\n      memory: 128Mi\n    requests:\n      cpu: 100m\n      memory: 128Mi\n\n  # -- Pod Security Context for the pod running kubectl.\n  # See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)\n  podSecurityContext:\n    runAsUser: 65534\n    runAsGroup: 65534\n    fsGroup: 65534\n    # -- The SecComp configuration.\n    # Not enabled by default as not every environment supports it.\n    # [https://kubernetes.io/docs/tutorials/security/seccomp/](https://kubernetes.io/docs/tutorials/security/seccomp/)\n    # seccompProfile:\n    #   type: RuntimeDefault\n\n  # -- Security Context for the container running kubectl\n  # See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container)\n  securityContext:\n    privileged: false\n    capabilities:\n      drop:\n      - ALL\n    readOnlyRootFilesystem: true\n    allowPrivilegeEscalation: false\n    runAsNonRoot: true\n    runAsUser: 65534\n    runAsGroup: 65534\n\n# -- An array of extra resources that will be deployed.\n# This is useful e.g. for custom resources like SnapshotSchedule provided by [https://github.com/backube/snapscheduler](https://github.com/backube/snapscheduler).\nextraResources:\n# - |\n#   apiVersion: snapscheduler.backube/v1\n#   kind: SnapshotSchedule\n#   metadata:\n#     name: daily\n#   spec:\n#     retention:\n#       maxCount: 30\n#     schedule: 30 0 * * *\n#\n# - |\n#   apiVersion: snapscheduler.backube/v1\n#   kind: SnapshotSchedule\n#   metadata:\n#     name: hourly\n#   spec:\n#     retention:\n#       maxCount: 24\n#     schedule: 15 * * * *\n\nsecretProviderClass:\n  # -- Whether to use CSI Secrets Store (e.g. Azure Key Vault) instead of \"traditional\" Kubernetes Secret.\n  enabled: false\n  # -- API Version of the SecretProviderClass\n  apiVersion: \"secrets-store.csi.x-k8s.io/v1\"\n  # -- Spec for the SecretProviderClass.\n  # Note: 1. The nodeKey must be mounted as objectAlias nodekey with path nodekey. 2. In case of a new network: The accountkey must be mounted as objectAlias key with path key.\n  spec: {}\n    ## Sample for AWS:\n    # provider: aws\n    # parameters:\n    #   objects: |\n    #     - objectName: \"TODO: ARN or Name of Secret\"\n    #       objectType: \"secretsmanager\"\n    #       jmesPath:\n    #         - path: nodekey\n    #           objectAlias: nodekey\n    #         # Key only required on new network\n    #         - path: key\n    #           objectAlias: key\n\nserviceAccount:\n  # -- Specifies whether a service account should be created.\n  # Must be true if secretProviderClass.enabled is true\n  create: false\n  # -- Annotations to add to the service account\n  annotations: {}\n    ## Sample for AWS if secretProviderClass.enabled is true\n    # eks.amazonaws.com/role-arn: \"TODO: The ARN of the IAM role\"\n\n  # -- The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\n  # -- Whether automounting API credentials for a service account is enabled or not.\n  # See [https://docs.bridgecrew.io/docs/bc_k8s_35](https://docs.bridgecrew.io/docs/bc_k8s_35)\n  automountServiceAccountToken: false\n",
              "deployment:\n  # -- The Quorum node public ip address (ingress Quorum node address)\n  enode_address: \"0.0.0.0\"\n  # -- The Port of the Quorum node public address\n  enode_address_port: \"30303\"\n  # -- NAT address, used for firewall configuration\n  NAT: \"1.2.3.4\"\n\nfullnameOverride: \"quorum\"",
              "deployment: \n  company: \"demo\"\n  network_name: \"preqa\"\n  enode_address: \"52.213.155.18\"",
              "affinity:\n  nodeAffinity:\n    requiredDuringSchedulingIgnoredDuringExecution:\n      nodeSelectorTerms:\n        - matchExpressions:\n            - key: topology.kubernetes.io/zone\n              operator: In\n              values:\n                - \"eu-west-1a\"",
              "use_case:\n  joinNetwork:\n    enabled: false\n  newNetwork:\n    enabled: true\n    plugin_data_common: \u003e-\n      {\"extradata\":\"0x0000000000000000000000000000000000000000000000000000000000000000d8d594321be8365fa006a801793d5cc95d54f9f5da549780c0\",\"enode\":\"8f938c81eac18693f40b9324119002faf6e228169e0d26b447940055c899f6d166d07e7f237080751112ad2cc76cc51d30d9d7d710129a35a00ec7b4ff2f0332\",\"nodeKeyPublic\":\"0x321Be8365FA006A801793d5cc95d54f9f5da5497\",\"genesisAccount\":\"0xcd7b0409b89523d98a98dbebe89d6e6d60f92274\"}\n\n    plugin_data_secrets: \u003e-\n      {\"nodeKey\":\"64ab607c10e4959e04fea5eda9e23dea4b535ef53165657be12dc3baf04b877d\",\"genesisKeyStoreAccount\":\"eyJhZGRyZXNzIjoiY2Q3YjA0MDliODk1MjNkOThhOThkYmViZTg5ZDZlNmQ2MGY5MjI3NCIsImNyeXB0byI6eyJjaXBoZXIiOiJhZXMtMTI4LWN0ciIsImNpcGhlcnRleHQiOiI3NTk1MzkwNjExOThkOWY5MmU5NjFiMWZlMDgxMWRkMzU2MmUzZDU3MjE4NjI3NjgxNjIzY2JiODdiODU4NjJkIiwiY2lwaGVycGFyYW1zIjp7Iml2IjoiNzVjMGE1ZGYwYzNlNmE0NGY4NDc5YzM5Yzc2MWVmZTMifSwibWFjIjoiYzAyMDZjMzAzNTRjZjZjM2QyNzBjMWQ1ZWVmZjQ5ZGI4Mzc1M2VlMGYwMjdiZTYzNGQwMWZhNGQ2YmUyZTJmMSIsImtkZiI6InNjcnlwdCIsImtkZnBhcmFtcyI6eyJka2xlbiI6MzIsIm4iOjI2MjE0NCwiciI6OCwicCI6MSwic2FsdCI6IjM5Zjg4NzAxMGZiOGI5NDJlNzhmMTMyN2FlNDA1NmI5NThiMWQzODViN2NhZTkyNWQxMzBmNWY4MDYzNjQwMzcifX0sImlkIjoiYzFiOTI4OWQtODU3MS00MTcwLWJhYTktZTEyODBiZDBmZGI1IiwidmVyc2lvbiI6M30=\",\"genesisKeyStoreAccountEncryptionPassword\":\"3TS0mvOG8lBLTv0VhmY8\",\"genesisAccountPrivateKey\":{\"type\":\"Buffer\",\"data\":[142,100,110,143,253,111,229,188,106,119,204,49,118,95,208,78,122,21,61,192,218,136,91,255,123,253,169,214,135,59,200,155]}}\n\nservice:\n  p2p:\n    type: LoadBalancer\n    annotations:\n      service.beta.kubernetes.io/aws-load-balancer-attributes: load_balancing.cross_zone.enabled=true,deletion_protection.enabled=false\n      service.beta.kubernetes.io/aws-load-balancer-eip-allocations: eipalloc-0bfb9dd66e7ea5648\n      service.beta.kubernetes.io/aws-load-balancer-subnets: subnet-03f6f7ef7423f735c\n      service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: \"2\"\n      service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: \"2\"\n      service.beta.kubernetes.io/aws-load-balancer-ip-address-type: ipv4\n      service.beta.kubernetes.io/aws-load-balancer-name: preqa-demo-quorum-node-qn-0\n      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip\n      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing\n      service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=true,deregistration_delay.timeout_seconds=120,deregistration_delay.connection_termination.enabled=true,stickiness.enabled=true,stickiness.type=source_ip\n      service.beta.kubernetes.io/aws-load-balancer-type: external\n      ",
              "serviceAccount:\n  create: true\n  annotations:\n    eks.amazonaws.com/role-arn: \"arn:aws:iam::393541031529:role/preqa-demo-quorum-node-role\"\nsecretProviderClass:\n  enabled: true\n  spec:\n    provider: aws\n    parameters:\n      objects: |\n        - objectName: \"arn:aws:secretsmanager:eu-west-1:393541031529:secret:preqa-demo-quorum-node20240205150842489200000001-S0m3z6\"\n          objectType: \"secretsmanager\"\n          jmesPath: \n            - path: nodekey\n              objectAlias: nodekey\n"
            ],
            "verify": false,
            "version": "0.6.7",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_iam_role.main",
            "aws_kms_key.main",
            "aws_secretsmanager_secret.main",
            "aws_secretsmanager_secret_version.main",
            "data.aws_caller_identity.main",
            "data.aws_eks_cluster.main",
            "data.aws_region.main",
            "data.local_file.config_context_sh",
            "data.local_file.join_network_plugin_secrets_json",
            "data.local_file.new_network_plugin_secrets_json",
            "data.local_file.secretsmanager_yaml",
            "local_file.secretsmanager_yaml"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "enode",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "enode://8f938c81eac18693f40b9324119002faf6e228169e0d26b447940055c899f6d166d07e7f237080751112ad2cc76cc51d30d9d7d710129a35a00ec7b4ff2f0332@52.213.155.18:30303?discport=0",
            "content_base64": null,
            "content_base64sha256": "Ck8n+Vv6TcAxHOvHnWrk7g0vXHO2NQrS8ulEqI/JgVk=",
            "content_base64sha512": "nXdY+x/ASruhp2wd4aiDAFY//K/1G8iC/EJzquuurNppGwXWo3ker5+L382zNchWQyYYvM0+ycOb0lkbsuiYpg==",
            "content_md5": "58d1fb16270b94e72c896a4dfbeb696c",
            "content_sha1": "7146cf18dbbfb6702f134e2d3d7376e178b5777f",
            "content_sha256": "0a4f27f95bfa4dc0311cebc79d6ae4ee0d2f5c73b6350ad2f2e944a88fc98159",
            "content_sha512": "9d7758fb1fc04abba1a76c1de1a88300563ffcaff51bc882fc4273aaebaeacda691b05d6a3791eaf9f8bdfcdb335c856432618bccd3ec9c39bd2591bb2e898a6",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../../../../networks/preqa/editable/demo/enode",
            "id": "7146cf18dbbfb6702f134e2d3d7376e178b5777f",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "aws_iam_role.main",
            "aws_kms_key.main",
            "aws_secretsmanager_secret.main",
            "aws_secretsmanager_secret_version.main",
            "data.aws_caller_identity.main",
            "data.aws_eip.main",
            "data.aws_eks_cluster.main",
            "data.aws_region.main",
            "data.kubernetes_config_map.main",
            "data.local_file.config_context_sh",
            "data.local_file.join_network_plugin_secrets_json",
            "data.local_file.new_network_plugin_secrets_json",
            "data.local_file.secretsmanager_yaml",
            "helm_release.main",
            "local_file.secretsmanager_yaml"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "genesis_geth_json",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "{\n  \"alloc\": {\n    \"0xcd7b0409b89523d98a98dbebe89d6e6d60f92274\": {\n        \"balance\": \"1000000000000000000000000000\"\n    }\n  },\n  \"coinbase\": \"0x0000000000000000000000000000000000000000\",\n  \"config\": {\n    \"homesteadBlock\": 0,\n    \"byzantiumBlock\": 0,\n    \"constantinopleBlock\": 0,\n    \"petersburgBlock\": 0,\n    \"istanbulBlock\": 0,\n    \"eip150Block\": 0,\n    \"eip150Hash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n    \"eip155Block\": 0,\n    \"eip158Block\": 0,\n    \"maxCodeSizeConfig\": [\n      {\n        \"block\": 0,\n        \"size\": 32\n      }\n    ],\n    \"chainId\": 10,\n    \"isQuorum\": true,\n    \"istanbul\": {\n      \"epoch\": 30000,\n      \"policy\": 0\n    }\n  },\n  \"difficulty\": \"0x1\",\n  \"extraData\": \"0x0000000000000000000000000000000000000000000000000000000000000000d8d594321be8365fa006a801793d5cc95d54f9f5da549780c0\",\n  \"gasLimit\": \"0xE0000000\",\n  \"mixHash\": \"0x63746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365\",\n  \"nonce\": \"0x0\",\n  \"parentHash\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n  \"timestamp\": \"0x00\"\n}",
            "content_base64": null,
            "content_base64sha256": "kOrwK+JrZnW5vNFKama3jL+1cloWTIpQGGjc+mIGZRo=",
            "content_base64sha512": "UughDI7jNZb4xu/hhloM0bhsb9CmAPwyHRl3PPVXy6BiBi6lRzk/Rw57CYV8GQe8OxFhH4BvkdJUBXoQjehq1A==",
            "content_md5": "95b40ef162b2111aa201ef154efdafb9",
            "content_sha1": "ab46d2fe4de731488724973c884ab2dae9ad754a",
            "content_sha256": "90eaf02be26b6675b9bcd14a6a66b78cbfb5725a164c8a501868dcfa6206651a",
            "content_sha512": "52e8210c8ee33596f8c6efe1865a0cd1b86c6fd0a600fc321d19773cf557cba062062ea547393f470e7b09857c1907bc3b11611f806f91d254057a108de86ad4",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../../../../networks/preqa/genesis-geth.json",
            "id": "ab46d2fe4de731488724973c884ab2dae9ad754a",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "aws_iam_role.main",
            "aws_kms_key.main",
            "aws_secretsmanager_secret.main",
            "aws_secretsmanager_secret_version.main",
            "data.aws_caller_identity.main",
            "data.aws_eks_cluster.main",
            "data.aws_region.main",
            "data.kubernetes_config_map.main",
            "data.local_file.config_context_sh",
            "data.local_file.join_network_plugin_secrets_json",
            "data.local_file.new_network_plugin_secrets_json",
            "data.local_file.secretsmanager_yaml",
            "helm_release.main",
            "local_file.secretsmanager_yaml"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "github_info_yaml",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "git_shared_configuration:\n  read_write_token: \"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\"\n",
            "content_base64": null,
            "content_base64sha256": "xkATT36NuOB3v37rctV0TpZ1pCIW7pOv/KzZlJu+5Ks=",
            "content_base64sha512": "m9TmXrOVWUVuSo2vn+gjyjGG5Lb6wfsrSP1rovDmVU9RWXkJ/+yTIKZKlq6no4TEU+XmIdR7xnQaUEU/emDYJQ==",
            "content_md5": "7ef31671922ab658e4650c0d9f6111a2",
            "content_sha1": "891db545e3b7db2a33ca8755f982e92f16f9d31d",
            "content_sha256": "c640134f7e8db8e077bf7eeb72d5744e9675a42216ee93affcacd9949bbee4ab",
            "content_sha512": "9bd4e65eb39559456e4a8daf9fe823ca3186e4b6fac1fb2b48fd6ba2f0e6554f51597909ffec9320a64a96aea7a384c453e5e621d47bc6741a50453f7a60d825",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./github.info.yaml",
            "id": "891db545e3b7db2a33ca8755f982e92f16f9d31d",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "rpc_address_yaml",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "config:\n  rpcAddress: \"http://172.20.182.195:8545\"\n\n",
            "content_base64": null,
            "content_base64sha256": "8aB6nEjNIa4QYEwiAo1ewt3dC0K5yO3RaUlB9+ROnrI=",
            "content_base64sha512": "/kmtgZ5+pltGSXYIqKMIQO+4WQNHo3WM13LOQtdImKPG3ZUNrAx13j0w2Edwd1GBqsxLnzvUqZCocMqaOiGBhg==",
            "content_md5": "907261bfa76b4ec865db03da955e54bc",
            "content_sha1": "0cde89f75271ff76489726a63eaaf7166767cd78",
            "content_sha256": "f1a07a9c48cd21ae10604c22028d5ec2dddd0b42b9c8edd1694941f7e44e9eb2",
            "content_sha512": "fe49ad819e7ea65b46497608a8a30840efb8590347a3758cd772ce42d74898a3c6dd950dac0c75de3d30d84770775181aacc4b9f3bd4a990a870ca9a3a218186",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../../../../private/preqa/demo/tmp/rpc-address.yaml",
            "id": "0cde89f75271ff76489726a63eaaf7166767cd78",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "aws_iam_role.main",
            "aws_kms_key.main",
            "aws_secretsmanager_secret.main",
            "aws_secretsmanager_secret_version.main",
            "data.aws_caller_identity.main",
            "data.aws_eks_cluster.main",
            "data.aws_region.main",
            "data.kubernetes_service.quorum_rpc",
            "data.local_file.config_context_sh",
            "data.local_file.join_network_plugin_secrets_json",
            "data.local_file.new_network_plugin_secrets_json",
            "data.local_file.secretsmanager_yaml",
            "helm_release.main",
            "local_file.github_info_yaml",
            "local_file.secretsmanager_yaml"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "secretsmanager_yaml",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "serviceAccount:\n  create: true\n  annotations:\n    eks.amazonaws.com/role-arn: \"arn:aws:iam::393541031529:role/preqa-demo-quorum-node-role\"\nsecretProviderClass:\n  enabled: true\n  spec:\n    provider: aws\n    parameters:\n      objects: |\n        - objectName: \"arn:aws:secretsmanager:eu-west-1:393541031529:secret:preqa-demo-quorum-node20240205150842489200000001-S0m3z6\"\n          objectType: \"secretsmanager\"\n          jmesPath: \n            - path: nodekey\n              objectAlias: nodekey\n",
            "content_base64": null,
            "content_base64sha256": "gArKJPmgvN/8uJl6DK2Oz/w/42nQmumLHEdhBFC3Rmg=",
            "content_base64sha512": "W9JbCOIKEh0vPi+KhuCO7y2g1nBTShTj3rYRy/RnOWN2Esyhk2UsoDHv3WSwXbCAPOGt0WjKFvDUb28ghy5CFQ==",
            "content_md5": "32457182d073d92a96dd6879123c3e1e",
            "content_sha1": "91837b1ae8068a2a73057cce384940ebdf14b4f1",
            "content_sha256": "800aca24f9a0bcdffcb8997a0cad8ecffc3fe369d09ae98b1c47610450b74668",
            "content_sha512": "5bd25b08e20a121d2f3e2f8a86e08eef2da0d670534a14e3deb611cbf46739637612cca193652ca031efdd64b05db0803ce1add168ca16f0d46f6f20872e4215",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../../../../private/preqa/demo/tmp/secretsmanager.yaml",
            "id": "91837b1ae8068a2a73057cce384940ebdf14b4f1",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "aws_iam_role.main",
            "aws_kms_key.main",
            "aws_secretsmanager_secret.main",
            "data.aws_caller_identity.main",
            "data.aws_eks_cluster.main",
            "data.aws_region.main",
            "data.local_file.config_context_sh"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "validator",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "0x321Be8365FA006A801793d5cc95d54f9f5da5497",
            "content_base64": null,
            "content_base64sha256": "W1vyRIS96kVkWZtdux9jeEwhUn+yTTQ4DvS9dgt1nTU=",
            "content_base64sha512": "tBwO2EJjnsQmy1pGJgaZDxfzD8n5SAej5Ddt4I9UXbpV60iV0hBRjqaXbvA46fu0GJx2T7/JgismC8xx7zREzg==",
            "content_md5": "df79b88e0333c53810cc502342880d35",
            "content_sha1": "3c569c5ec23afb9cb0995d650c7111d8b8840428",
            "content_sha256": "5b5bf24484bdea4564599b5dbb1f63784c21527fb24d34380ef4bd760b759d35",
            "content_sha512": "b41c0ed842639ec426cb5a462606990f17f30fc9f94807a3e4376de08f545dba55eb4895d210518ea6976ef038e9fbb4189c764fbfc9822b260bcc71ef3444ce",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../../../../networks/preqa/editable/demo/validator",
            "id": "3c569c5ec23afb9cb0995d650c7111d8b8840428",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "aws_iam_role.main",
            "aws_kms_key.main",
            "aws_secretsmanager_secret.main",
            "aws_secretsmanager_secret_version.main",
            "data.aws_caller_identity.main",
            "data.aws_eks_cluster.main",
            "data.aws_region.main",
            "data.kubernetes_config_map.main",
            "data.local_file.config_context_sh",
            "data.local_file.join_network_plugin_secrets_json",
            "data.local_file.new_network_plugin_secrets_json",
            "data.local_file.secretsmanager_yaml",
            "helm_release.main",
            "local_file.secretsmanager_yaml"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "smart_contract",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "index_key": 0,
          "status": "tainted",
          "schema_version": 0,
          "attributes": {
            "id": "3139246883605857964",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "aws_iam_role.main",
            "aws_kms_key.main",
            "aws_secretsmanager_secret.main",
            "aws_secretsmanager_secret_version.main",
            "data.aws_caller_identity.main",
            "data.aws_eks_cluster.main",
            "data.aws_region.main",
            "data.kubernetes_config_map.main",
            "data.local_file.config_context_sh",
            "data.local_file.join_network_plugin_secrets_json",
            "data.local_file.new_network_plugin_secrets_json",
            "data.local_file.secretsmanager_yaml",
            "helm_release.main",
            "local_file.genesis_geth_json",
            "local_file.secretsmanager_yaml"
          ]
        }
      ]
    }
  ],
  "check_results": null
}

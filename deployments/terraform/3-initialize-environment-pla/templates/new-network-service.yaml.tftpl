use_case:
  joinNetwork:
    enabled: false
  newNetwork:
    enabled: true
    plugin_data_common: >-
      ${plugin_data_common}

    plugin_data_secrets: >-
      ${plugin_data_secrets}

service:
  p2p:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-attributes: load_balancing.cross_zone.enabled=true,deletion_protection.enabled=false
      service.beta.kubernetes.io/aws-load-balancer-eip-allocations: ${aws_load_balancer_eip_allocations}
      service.beta.kubernetes.io/aws-load-balancer-subnets: ${aws_load_balancer_subnets}
      service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
      service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
      service.beta.kubernetes.io/aws-load-balancer-ip-address-type: ipv4
      service.beta.kubernetes.io/aws-load-balancer-name: ${aws_load_balancer_name}
      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
      service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=true,deregistration_delay.timeout_seconds=120,deregistration_delay.connection_termination.enabled=true,stickiness.enabled=true,stickiness.type=source_ip
      service.beta.kubernetes.io/aws-load-balancer-type: external
      
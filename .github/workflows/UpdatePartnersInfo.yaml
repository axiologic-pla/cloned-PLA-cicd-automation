name: 'Update Partners Info'

on:
  workflow_dispatch:
    inputs:
      networkName:
        description: 'Enter the network name'
        required: true
        type: string
      clusterName:
        description: 'Enter the name of your cluster'
        required: true
        type: string

env:
  CICD_DEPLOYMENT_NAME: "5-update-partners-info-pla"

  GIT_USERNAME: ${{ vars.GIT_USERNAME }}
  GIT_EMAIL: ${{ vars.GIT_EMAIL }}

  RUNTIME_CONTAINER_IMAGE_ID: ${{ vars.RUNTIME_CONTAINER_IMAGE_ID }}

  CICD_DEPLOYMENT_TOKEN: ${{ secrets.CICD_DEPLOYMENT_TOKEN }}
  CICD_AUTOMATION_REPO: ${{ vars.CICD_AUTOMATION_REPO }}
  CICD_AUTOMATION_BRANCH: ${{ vars.CICD_AUTOMATION_BRANCH }}

  AWS_IAM_ROLE_ARN_TO_ASSUME: ${{ secrets.AWS_IAM_ROLE_ARN_TO_ASSUME }}

  NETWORK_NAME: ${{ github.event.inputs.networkName }}
  CLUSTER_NAME: ${{ github.event.inputs.clusterName }}

  HELM_CHARTS_REPOSITORY_URL: ${{ vars.HELM_CHARTS_REPOSITORY_URL }}
  HELM_PL_PLUGIN_REPOSITORY_URL: ${{ vars.HELM_PL_PLUGIN_REPOSITORY_URL }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  UpdatePartnersInfo:
    name: 'Update Partners Info'
    runs-on: ubuntu-22.04 # version: 20230305.1, sha256:2adf22367284330af9f832ffefb717c78239f6251d9d0f58de50b86229ed1427
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3.3.0
        with:
          token: ${{ env.CICD_DEPLOYMENT_TOKEN }}

      - uses: actions/checkout@v3.3.0
        with:
          token: ${{ env.CICD_DEPLOYMENT_TOKEN }}
          repository: ${{ env.CICD_AUTOMATION_REPO }}
          path: "./automation"
          ref: ${{ env.CICD_AUTOMATION_BRANCH }}
      
      - name: 'Set env AWS_REGION'
        run: echo "AWS_REGION=$(cat ./private/${{ env.NETWORK_NAME }}/${{ env.CLUSTER_NAME }}/region)" >> $GITHUB_ENV

      - name: 'Configure AWS Credentials Action For GitHub Actions'
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.AWS_IAM_ROLE_ARN_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 'Helm Install'
        uses: azure/setup-helm@v3.5
        with:
          version: v3.9.0
          token: ${{ env.CICD_DEPLOYMENT_TOKEN }}

      - name: Helm Install pharmaledger charts
        run: |
          helm repo add pharmaledgerassoc ${{ env.HELM_CHARTS_REPOSITORY_URL }}

      - name: Helm Install pharmaledger plugins
        run: |
          helm plugin install ${{ env.HELM_PL_PLUGIN_REPOSITORY_URL }}

      - name: 'Terraform Install'
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.5.7
          
      - name: 'Terraform Apply'
        run: |
         cd ./automation/deployments/terraform/${{ env.CICD_DEPLOYMENT_NAME }}
         /bin/bash terraform.sh apply \
           "${{ env.NETWORK_NAME }}" \
           "${{ env.CLUSTER_NAME }}" \
           "${{ env.CICD_DEPLOYMENT_TOKEN }}" \
           "${{ env.GIT_USERNAME }}" \
           "${{ env.GIT_EMAIL }}"
